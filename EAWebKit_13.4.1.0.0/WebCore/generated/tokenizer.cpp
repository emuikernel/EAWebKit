/*
 * Copyright (C) 2003 Lars Knoll (knoll@kde.org)
 *
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

/* This file is mostly data generated by flex. Unfortunately flex
   can't handle 16bit strings directly, so we just copy the part of
   the code we need and modify it to our needs.

   Most of the defines below are to make sure we can easily use the
   flex generated code, using as little editing as possible.

   The flex syntax to generate the lexer are more or less directly
   copied from the CSS2.1 specs, with some fixes for comments and
   the important symbol.

   To regenerate, run flex on tokenizer.flex. After this, copy the
   data tables and the YY_DECL method over to this file. Remove the
   init code from YY_DECL and change the YY_END_OF_BUFFER to only call
   yyterminate().

*/

// --------- begin generated code -------------------


#include "CSSGrammar.h"

#define INITIAL 0
#define mediaquery 1
#define forkeyword 2
#define nthchild 3

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t;
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */
#define YY_NUM_RULES 87
#define YY_END_OF_BUFFER 88
static yyconst short int yy_accept[592] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,   88,   86,
        2,    2,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   71,   86,   86,   86,   86,   14,   14,   14,   86,
       86,   85,   14,   14,   14,   84,   16,   86,   86,   71,
       14,    2,    0,    0,    0,   13,    0,    0,   17,    0,
       18,   17,    8,    0,    0,    9,    0,    0,   14,   14,
       72,    0,   70,    0,    0,   71,    0,   68,   68,   68,
       68,   68,   68,   68,   68,   68,   68,   68,   68,   65,
       68,    0,    0,    0,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   14,   14,    7,   81,   14,

        0,   14,   14,    0,   14,    6,    5,   14,   14,   14,
        0,   15,   14,   71,   15,    0,    0,   14,    0,    0,
        0,   13,    0,    0,   18,   18,   18,    0,   17,    0,
        0,   13,    0,    0,    4,   14,    0,    0,   68,   68,
       69,   68,    0,   68,   55,   68,   50,   53,   68,   66,
       57,   68,   56,   64,   59,   58,   54,   68,   68,   68,
        0,   48,   48,   48,   48,    0,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   14,   14,   14,   14,
       14,   82,   82,   14,   12,   10,   14,   69,   68,    0,
       15,   14,    0,    0,    0,   18,   18,   18,    0,    0,

       14,    0,    1,   68,   68,   68,   68,   60,   68,   67,
       61,   51,   68,    3,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   14,   14,
       74,   14,    0,   82,   82,   82,   81,   11,   15,    0,
        0,   18,   18,    0,   14,    0,    0,   68,   68,   68,
       62,   63,   48,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   20,   48,   48,   14,   14,   14,   14,   14,
       83,   82,   82,   82,   82,    0,    0,    0,    0,   76,
        0,    0,    0,   18,   18,    0,   14,   68,   68,   52,
       48,   48,   48,   48,   48,   48,   48,   48,   37,   48,

       48,   48,   48,   48,   14,   14,   14,   14,   14,   83,
       82,   82,   82,   82,   82,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   76,    0,    0,    0,    0,   18,
       18,    0,   14,   68,   68,   48,   48,   48,   48,   48,
       48,   19,   48,   48,   48,   48,   48,   48,   48,   48,
       14,   14,   14,   14,   14,   83,   82,   82,   82,   82,
       82,   82,    0,   75,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   18,   18,    0,
       14,   68,   68,   48,   48,   48,   48,   39,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   14,

       14,   14,   14,   83,   82,   82,   82,   82,   82,   82,
       82,    0,   75,    0,    0,    0,   75,    0,    0,    0,
        0,   18,   14,   14,   14,   68,   48,   48,   48,   48,
       48,   48,   48,   48,   31,   48,   48,   48,   48,   48,
       22,   48,   14,   14,   14,   83,    0,    0,    0,   49,
       14,   14,   14,   14,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   38,   48,   48,   40,   48,   48,   34,
       48,   48,   24,   80,   14,   14,   14,   83,    0,    0,
        0,   14,   14,   14,   14,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   23,   48,

       48,   14,   14,    0,    0,    0,   73,   14,   79,   78,
       48,   48,   48,   48,   48,   48,   48,   27,   48,   33,
       32,   48,   48,   48,   48,   14,   14,    0,    0,   77,
       48,   48,   48,   41,   48,   48,   48,   48,   29,   36,
       35,   48,   48,   14,   14,   42,   48,   48,   48,   43,
       28,   48,   48,   48,   48,   14,   48,   48,   48,   48,
       48,   48,   48,   14,   48,   48,   48,   48,   48,   21,
       48,   48,   48,   45,   48,   48,   25,   48,   46,   48,
       48,   48,   48,   44,   26,   48,   48,   30,   48,   47,
        0

    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   12,   18,   19,   20,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   12,   22,   23,
       24,   25,   26,   27,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
       12,   28,   12,   29,   30,   12,   31,   32,   33,   34,

       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
       55,   56,   57,   58,   12,   59,    1,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,

       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60
    } ;

static yyconst int yy_meta[61] =
    {   0,
        1,    2,    3,    3,    3,    4,    4,    4,    4,    4,
        4,    4,    4,    5,    4,    4,    6,    7,    4,    4,
        8,    4,    4,    4,    4,    9,    4,   10,    4,   10,
       11,   11,   11,   11,   11,   11,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,    4,    4,    4,   10
    } ;

static yyconst short int yy_base[625] =
    {   0,
        0,    0,   39,   41,    0,    0,   47,   56, 2327, 2354,
       76,   99,  104,   59,   93, 2281,   62, 2271,   94, 2271,
     2266,  137, 2270,  180,   99, 2237,   85,  109,  224, 2188,
     2175, 2354,  122,  223,  225, 2354, 2354,   45,  226,   48,
      278,  113,  254, 2119,  132, 2354,  327,  121,  254,  276,
     2111,  305, 2354,  125,  362, 2354, 2111,  282,  181,  236,
       74, 2108, 2112, 2085, 2088,    0,  353,  134,  124,  248,
      317,  325,  246,  249,  326,  354,  329,  374,  382,  129,
      250, 2080,  411,  387, 2067,  116,  166,  217,  218,  168,
      171,   66,  174,  341,  254,  386,  463, 2354, 2354,  387,

      404,  398,  413,  454,  418, 2354, 2354,  428,  402,  464,
      277,  498,  198,  281,  505,  522,  515,  529, 2045,  316,
      292,  319,  556,  591, 2062,  626, 2058,  520,    0,  516,
      421,  445,  661,  696, 2354,  498, 2069,  357,  446,  731,
     2354,  453,  547,  455,  454,  548,  520,  521,  569,  546,
      581,  585,  586,  587,  588,  589,  590,  616,  593,  620,
     2065,  172, 2054,  766, 2046,  652,  353,  378,  465,  117,
      477,  221,  592,  538,  606,  276,  687,  417,  801,  624,
      628,  627, 2021,  626,  641,  662,  688,  736,  810,  771,
     1930,  726, 1903,  348,  808,  824, 1874,  859,  678,  850,

      747, 1838, 2354,  866,  653,  901,  761,  686,  791,  687,
      727,  728,  765, 2354,  514,  892, 1825,  936,  383,  519,
      621,  783,  730,  721,  573,  644,  753,  767,  927,  943,
     2354,  952,  967,  687, 1684, 1683, 1002,  697,  762, 1622,
      988, 1004, 1010, 1026,  838, 1616,  553, 1032, 1048,  901,
      793,  850,  789, 1054, 1070,  823,  798,  796,  698,  851,
      448,  821, 1571,  822,  985, 1076, 1092,  882,  959,  917,
     1098,  828, 1571, 1546, 1545, 1133, 1147,  845,  861, 2354,
     1174, 1520, 1133, 1165, 1182, 1190,  902, 1198, 1206,  891,
      915, 1214, 1222,  922,  886,  881,  961, 1131, 1518,  968,

      928,  956,  958,  953, 1230, 1238, 1144, 1142,  998, 1246,
      929, 1507, 1499, 1431, 1386, 1281, 1020, 1286, 1300, 1021,
     1335, 1314, 1347, 1374, 1388, 1415, 1450, 1354, 1278, 1374,
     1406, 1441, 1129, 1458, 1466, 1001, 1474, 1482, 1166, 1004,
      647, 1295, 1027, 1165, 1028,  649, 1315, 1048, 1042, 1269,
     1517, 1503, 1331, 1372, 1383, 1519, 1096, 1269, 1202, 1166,
     1026,  969, 1554, 2354, 1090, 1066, 1559, 1586, 1621, 1371,
     1087, 1580, 1656, 1691, 1545,  939, 1612, 1599, 1647, 1682,
     1401, 1699, 1707, 1297, 1607, 1715, 1499,  954,  679, 1049,
     1266, 1247,  790, 1145, 1302, 1279, 1067, 1092, 1316, 1750,

     1514, 1417, 1157, 1736,  933, 2354, 2354, 2354, 2354, 2354,
     2354, 1771, 1088, 1318, 1759, 1798, 1344, 1370, 1784, 1800,
      899, 1635, 1452, 1498, 1636, 1806, 1815, 1756, 1353, 1432,
     1385, 1433, 1248, 1515,  848, 1476, 1376, 1572, 1442, 1540,
     1441, 1623, 1516, 1832, 1683, 1838, 1847, 1854, 1863, 2354,
     1768, 1657, 1794, 1658, 1670, 1672, 1673,  860, 1709,  722,
     1192, 1216, 1637,  792, 1570, 1588,  758, 1735, 1600,  756,
     1717, 1112, 1648, 2354, 1769, 1816, 1877, 2354, 1882, 1888,
     1904, 1784, 1796, 1800, 1833, 1603,  517, 1753, 1834, 1864,
     1865, 1738, 1876, 1817, 1678, 1822, 1761, 1899,  723, 1883,

     1901, 1916, 1928, 1926, 1932, 1948, 2354, 1917, 2354, 2354,
     1943, 1232, 1386, 1873, 1915, 1093, 1942, 1882, 1904,  682,
      623, 1823, 1958, 1924, 1945, 1960, 1961, 1973, 1982, 2354,
     1022, 1948,  884,  611, 1959, 1963, 1971, 1967, 1992,  583,
      543, 1781, 1973, 1998, 2008,  542, 1333, 1950, 1995,  486,
      377, 1996, 1997, 1999, 1905, 2014, 2001, 1545, 2003, 2005,
     2007, 2009, 2011, 2026, 2015, 2021, 2010, 2023, 2027,  376,
     2031, 2044, 2036,  323, 2038, 2037,  322, 2040,  321,  820,
     2041, 2042, 2043,  214,  173, 2048, 2050,   60, 2052,   48,
     2354, 2095, 2100, 2110, 2115, 2123, 2130, 2140, 2148, 2153,

     2163, 2174, 2176, 2184, 2190, 2198, 2203, 2211, 2219, 2230,
     2238, 2246, 2251, 2262, 2267, 2277, 2282, 2292, 2302, 2312,
     2317, 2327, 2337, 2342
    } ;

static yyconst short int yy_def[625] =
    {   0,
      591,    1,    1,    1,    1,    1,    1,    1,  591,  591,
      591,  591,  591,  592,  593,  591,  594,  591,  595,  591,
      591,  591,  591,  591,  596,  591,  597,  597,  597,  591,
      591,  591,  597,  597,  597,  591,  591,  591,  595,   22,
      597,  591,  591,  591,  592,  591,  598,  593,  591,  599,
      600,  600,  591,  594,  601,  591,  591,  596,  597,  597,
       22,  602,  591,  603,  591,   22,  604,  605,  605,  605,
      605,  605,  605,  605,  605,  605,  605,  605,  605,  605,
      605,  591,   24,  606,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  597,  597,  591,  591,  597,

      608,  597,  597,  591,  597,  591,  591,  597,  597,  597,
      591,  591,   41,   22,  605,  591,  591,  597,  591,  592,
      592,  592,  592,  598,  600,   52,  600,  609,   52,  594,
      594,  594,  594,  601,  591,  597,  602,  610,  605,  605,
      591,  605,  611,  605,  605,  605,  605,  605,  605,  605,
      605,  605,  605,  605,  605,  605,  605,  605,  605,  605,
      591,  607,  607,  607,  607,  612,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,   97,  597,   97,  597,
      597,  613,  591,  597,  597,  597,  597,  591,  605,  591,
      591,  597,  591,  592,  123,  126,  600,  126,  594,  133,

      597,  614,  591,  140,  605,  140,  605,  605,  605,  605,
      605,  605,  605,  591,  607,  164,  607,  164,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,   97,  179,
      591,  597,  591,  615,  591,  591,  616,  597,  605,  591,
      123,  126,  198,  133,  597,  614,  610,  140,  206,  605,
      605,  605,  607,  164,  218,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,   97,  179,  597,  597,  597,
      591,  617,  591,  591,  591,  616,  616,  618,  619,  591,
      620,  591,  123,  126,  198,  133,  597,  140,  206,  605,
      607,  164,  218,  607,  607,  607,  607,  607,  607,  607,

      607,  607,  607,  607,   97,  179,  597,  597,  597,  591,
      621,  591,  591,  591,  591,  591,  618,  591,  622,  619,
      623,  616,  616,  616,  616,  616,  620,  591,  123,  126,
      198,  133,  597,  140,  206,  607,  164,  218,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      597,  179,  597,  597,  597,  591,  624,  591,  591,  591,
      591,  591,  591,  591,  618,  618,  618,  618,  622,  619,
      619,  619,  619,  623,  326,  591,  123,  600,  198,  133,
      597,  140,  206,  607,  607,  218,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  597,

      597,  597,  597,  591,  591,  591,  591,  591,  591,  591,
      591,  618,  618,  618,  368,  619,  619,  619,  373,  326,
      591,  600,  597,  597,  597,  206,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  597,  597,  597,  591,  368,  373,  326,  591,
      597,  597,  597,  597,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  591,  597,  597,  597,  591,  368,  373,
      326,  597,  597,  597,  597,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,

      607,  597,  597,  368,  373,  326,  591,  597,  591,  591,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  597,  597,  368,  373,  591,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  597,  597,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  597,  607,  607,  607,  607,
      607,  607,  607,  597,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
        0,  591,  591,  591,  591,  591,  591,  591,  591,  591,

      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591
    } ;

static yyconst short int yy_nxt[2415] =
    {   0,
       10,   11,   12,   11,   11,   11,   13,   14,   15,   16,
       10,   10,   17,   10,   10,   18,   10,   19,   20,   21,
       22,   10,   23,   10,   10,   10,   24,   25,   26,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   28,   27,   27,   27,   27,   27,   27,
       29,   27,   27,   27,   27,   27,   10,   30,   31,   27,
       32,   37,   32,   38,   39,  111,   46,   40,  114,   33,
       37,   33,   38,   39,   46,  166,   40,   42,   42,   42,
       42,   42,   34,   35,   34,   35,   47,  166,  112,   55,
       41,  115,  591,  166,   61,   36,  173,   36,   99,   41,

       42,   42,   42,   42,   42,   43,   43,   43,   43,   43,
       48,   57,  101,   49,   42,   42,   42,   42,   42,   97,
       50,   58,   99,   52,   52,   52,   52,   52,   52,   97,
       97,   97,   97,   97,   97,   99,  101,   46,  591,   46,
      141,  591,   44,  166,  166,  141,   60,   63,   50,  101,
      141,  143,   55,  102,   64,   65,  143,   66,  103,   47,
      167,  143,  222,  144,   67,  108,   68,   69,   69,   70,
       71,   72,   69,   73,   74,   75,   69,   76,   69,   77,
       69,   69,   78,   69,   79,   80,   81,   69,   69,   69,
       69,   69,   69,  166,   99,  166,   69,   83,  166,  166,

      166,  166,  171,  168,  174,  172,  215,   84,  101,   85,
       85,   86,   87,   85,   85,   88,   85,   85,   89,   85,
       85,   90,   91,   92,   85,   93,   85,   94,   85,   95,
       85,   85,   85,   85,   85,   85,   99,   99,   99,   85,
      104,  166,  100,   57,  166,  166,  111,  100,  166,   99,
      101,  101,  101,   58,  224,   43,   43,   43,   43,   43,
      170,  169,  141,  101,  141,  141,  141,  109,  110,  113,
      136,  105,  103,  143,   49,  143,  143,  143,   60,  116,
      116,  166,  116,  116,   49,   49,   49,   49,   49,   49,
      145,   99,   44,  149,  117,  118,  126,  111,  176,   46,

      160,  114,   97,  166,  150,  101,  126,  126,  126,  126,
      126,  126,   97,   97,   97,   97,   97,   97,   45,   47,
      112,  228,  102,   46,  115,  129,   46,  103,   45,   45,
       45,  120,  128,  141,  122,  129,  129,  129,  129,  129,
      129,  141,  141,   47,  143,  141,   47,  123,  166,  166,
      166,  146,  143,  143,  124,   46,  143,  123,  123,  123,
      123,  123,  123,   54,   54,   54,  130,  147,  166,  151,
      141,  153,  138,  140,  132,   47,  203,  154,  148,  175,
      166,  143,  133,  140,  140,  140,  140,  140,  140,  134,
      141,  152,  133,  133,  133,  133,  133,  133,  141,   99,

       99,  143,  219,  166,  166,  166,  155,  164,  220,  143,
      166,   99,  158,  101,  101,   99,  159,  164,  164,  164,
      164,  164,  164,  156,  179,  101,   99,  157,  591,  101,
       99,   99,  256,   46,  179,  179,  179,  179,  179,  179,
      101,   99,   85,   85,  101,  101,   85,  180,   55,   85,
      181,  186,   85,   85,   85,  101,   85,   46,   85,  184,
       85,  185,  141,  162,   96,   96,   96,   96,   96,  141,
      141,  141,   55,  143,  182,  166,   99,   99,  299,  183,
      143,  143,  143,  177,  182,  182,  182,  182,  182,  182,
      101,  101,  166,  177,  177,  177,  177,  177,  177,  116,

      116,  207,  116,  116,  166,  187,  116,  116,  221,  116,
      116,   99,  223,  166,  117,  117,  190,  190,   54,  190,
      190,  188,  189,  116,  116,  101,  116,  116,   46,  201,
      190,  190,  143,  190,  190,  191,  141,  141,  117,  117,
      198,  166,   99,   55,  166,  253,  166,  143,  143,  192,
      198,  198,  198,  198,  198,  198,  101,  121,  194,  194,
      194,  121,  141,   46,  141,  166,  257,  206,  247,  166,
      166,  512,  203,  143,  226,  143,  195,  206,  206,  206,
      206,  206,  206,   47,  208,  141,  195,  195,  195,  195,
      195,  195,   45,   45,   45,  120,  143,  141,  122,  209,

      166,  141,  141,  141,  141,  141,  141,  262,  143,  141,
      166,  123,  143,  143,  143,  143,  143,  143,  124,  166,
      143,  123,  123,  123,  123,  123,  123,  125,  125,  125,
      125,  125,  141,  166,  225,  212,  141,  231,  166,  237,
      210,   99,  227,  143,  233,  232,  196,  143,  166,  211,
      166,  101,  235,  101,   99,  101,  196,  196,  196,  196,
      196,  196,  131,  199,  199,  199,  131,  213,  101,  141,
      258,  166,  218,   46,  166,  231,  166,  389,  263,  393,
      143,  200,  218,  218,  218,  218,  218,  218,   55,  101,
       46,  200,  200,  200,  200,  200,  200,   54,   54,   54,

      130,   99,  141,  141,  233,   55,  166,  229,  132,  166,
       99,  432,  273,  143,  143,  101,  133,  229,  229,  229,
      229,  229,  229,  134,  101,  166,  133,  133,  133,  133,
      133,  133,  139,  139,  139,  139,  139,  190,  190,   99,
      190,  190,  238,  141,  141,  297,  192,  141,  166,  166,
      166,  204,  491,  101,  143,  143,  191,  166,  143,  261,
       99,  204,  204,  204,  204,  204,  204,  163,  163,  163,
      163,  163,  190,  190,  101,  190,  190,  141,  141,  260,
      166,  141,  239,  166,  265,  166,  216,  245,  143,  143,
      264,  191,  143,  166,  166,  250,  216,  216,  216,  216,

      216,  216,  178,  178,  178,  178,  178,  141,  252,  141,
      166,  190,  190,  296,  190,  190,  166,  166,  143,  166,
      143,  230,  436,  166,  251,  166,  141,  259,  241,  291,
      239,  230,  230,  230,  230,  230,  230,  143,  241,  241,
      241,  241,  241,  241,  242,  233,  295,  166,  166,  166,
      166,   99,  318,  312,  242,  242,  242,  242,  242,  242,
      197,  197,  197,  197,  197,  101,  141,  294,  298,  300,
      244,  301,  319,  318,  584,  166,  287,  143,  166,  243,
      244,  244,  244,  244,  244,  244,  248,  166,  321,  243,
      243,  243,  243,  243,  243,   99,  248,  248,  248,  248,

      248,  248,  205,  205,  205,  205,  205,  141,  166,  101,
      489,  166,  254,  166,  548,   99,  341,  141,  143,  307,
      340,  249,  254,  254,  254,  254,  254,  254,  143,  101,
       99,  249,  249,  249,  249,  249,  249,  217,  217,  217,
      217,  217,  166,  290,  101,  347,  233,  266,  450,  166,
      233,  333,  309,  336,  358,  166,  255,  266,  266,  266,
      266,  266,  266,  267,  339,   99,  255,  255,  255,  255,
      255,  255,   99,  267,  267,  267,  267,  267,  267,  101,
      166,  166,  421,  166,  268,  166,  101,  271,  166,  308,
      348,  350,  349,  269,  411,  166,  270,  271,  271,  271,

      271,  271,  271,  276,  276,  276,  276,  276,  283,  278,
      342,   99,  166,  346,  279,  355,  280,  302,  283,  283,
      283,  283,  283,  283,  284,  101,  303,  318,  166,  281,
      285,  166,  304,  318,  284,  284,  284,  284,  284,  284,
      285,  285,  285,  285,  285,  285,  286,  319,  321,  166,
      384,  410,  288,  388,  166,  166,  286,  286,  286,  286,
      286,  286,  288,  288,  288,  288,  288,  288,  289,  166,
      546,  390,  392,  318,  292,  166,  166,  398,  289,  289,
      289,  289,  289,  289,  292,  292,  292,  292,  292,  292,
      293,  397,  317,  319,  166,  318,  305,  318,  433,  318,

      293,  293,  293,  293,  293,  293,  305,  305,  305,  305,
      305,  305,  306,  233,  321,  319,  440,  319,  310,  166,
      166,  406,  306,  306,  306,  306,  306,  306,  310,  310,
      310,  310,  310,  310,  276,  276,  276,  276,  276,  166,
      278,  441,   99,  536,  500,  279,  381,  280,  316,  316,
      316,  316,  316,  329,  591,   99,  101,   99,  166,  591,
      281,  280,  343,  329,  329,  329,  329,  329,  329,  101,
       99,  101,  166,  344,  281,  316,  316,  316,  316,  322,
      345,  324,  353,  387,  101,  330,  324,  324,  325,  437,
      354,  409,  166,  166,  326,  330,  330,  330,  330,  330,

      330,  327,  331,  391,  326,  326,  326,  326,  326,  326,
      332,  445,  331,  331,  331,  331,  331,  331,  334,  166,
      332,  332,  332,  332,  332,  332,  335,  408,  334,  334,
      334,  334,  334,  334,  337,  492,  335,  335,  335,  335,
      335,  335,  338,  166,  337,  337,  337,  337,  337,  337,
      351,  493,  338,  338,  338,  338,  338,  338,  352,  166,
      351,  351,  351,  351,  351,  351,  356,  532,  352,  352,
      352,  352,  352,  352,  166,  166,  356,  356,  356,  356,
      356,  356,  316,  316,  316,  316,  316,  363,  363,  363,
      363,  363,  435,  166,  407,  280,  166,  465,  377,  434,

      364,  317,  317,  317,  365,  399,  166,  367,  377,  377,
      377,  377,  377,  377,  427,  316,  316,  316,  316,  316,
      368,  591,  166,  439,  166,  318,  591,  369,  280,  166,
      368,  368,  368,  368,  368,  368,  320,  320,  320,  370,
      438,  281,  166,  166,   99,  319,  394,  372,  316,  316,
      316,  316,  316,  442,  591,  373,  318,  395,  101,  591,
      166,  280,  374,  557,  396,  373,  373,  373,  373,  373,
      373,  321,  401,  320,  281,  316,  316,  316,  316,  316,
      166,  591,  318,  318,  376,   99,  591,  461,  280,  316,
      316,  316,  316,  316,  378,  591,   99,  321,  321,  101,

      591,  281,  280,  166,  378,  378,  378,  378,  378,  378,
      101,  362,  166,  166,   99,  281,  322,  322,  322,  322,
      322,  402,  591,  463,  533,  468,  379,  591,  101,  280,
       99,  423,  403,  424,  444,  375,  379,  379,  379,  379,
      379,  379,  281,  425,  101,  375,  375,  375,  375,  375,
      375,  316,  316,  316,  316,  322,  361,  324,  472,  166,
      166,  380,  324,  324,  325,   99,  462,  464,  166,  166,
      326,  380,  380,  380,  380,  380,  380,  327,  382,  101,
      326,  326,  326,  326,  326,  326,  383,  470,  382,  382,
      382,  382,  382,  382,  385,  451,  383,  383,  383,  383,

      383,  383,  386,  166,  385,  385,  385,  385,  385,  385,
      467,   99,  386,  386,  386,  386,  386,  386,   96,   96,
       96,   96,   96,  400,  360,  101,  166,   99,  452,  474,
       99,  429,  359,  400,  400,  400,  400,  400,  400,  404,
      430,  101,  166,  101,  101,  166,  431,  443,  466,  404,
      404,  404,  404,  404,  404,  363,  363,  363,  363,  363,
      412,  363,  363,  363,  412,  420,  318,  166,  364,  328,
      315,  314,  166,  413,  471,  420,  420,  420,  420,  420,
      420,  416,  363,  363,  363,  416,  319,  366,  414,  414,
      414,  366,  318,  318,  417,  566,  313,  166,  166,  166,

      125,  125,  125,  125,  125,  469,  415,  321,  163,  163,
      163,  163,  163,  319,  495,  166,  415,  415,  415,  415,
      415,  415,  317,  317,  317,  365,  128,  166,  367,  496,
      166,  247,   45,  498,  166,  511,  197,  197,  197,  197,
      197,  368,   45,   45,   45,   45,   45,   45,  369,   99,
      166,  368,  368,  368,  368,  368,  368,  371,  418,  418,
      418,  371,  128,  101,  166,  501,  453,  422,  318,  282,
       99,   99,  473,  494,  454,  166,  419,  422,  422,  422,
      422,  422,  422,  321,  101,  101,  419,  419,  419,  419,
      419,  419,  320,  320,  320,  370,   99,  166,  483,  166,

      166,  485,   54,  372,  486,  166,  487,  488,  275,  274,
      101,  373,   54,   54,   54,   54,   54,   54,  374,  142,
      520,  373,  373,  373,  373,  373,  373,  426,  477,  142,
      142,  142,  142,  142,  142,  428,  166,  426,  426,  426,
      426,  426,  426,  490,  166,  428,  428,  428,  428,  428,
      428,  178,  178,  178,  178,  178,  446,  217,  217,  217,
      217,  217,  166,   99,  499,  166,  446,  446,  446,  446,
      446,  446,  412,  363,  363,  363,  412,  101,  318,  447,
      166,   99,   99,  166,  497,  413,  513,  517,  166,  447,
      447,  447,  447,  447,  447,  101,  101,  507,  319,  416,

      363,  363,  363,  416,  448,  522,  502,   99,  166,   99,
      318,  101,  417,  509,  448,  448,  448,  448,  448,  448,
      449,  101,  482,  101,  554,  321,  142,  101,  508,   99,
      449,  449,  449,  449,  449,  449,  142,  142,  142,  142,
      142,  142,  166,  101,  166,   99,  510,  484,  455,  166,
      166,  503,  166,  247,  519,  456,  521,  457,  478,  101,
      101,  166,  458,  459,  475,  540,  460,  479,  478,  478,
      478,  478,  478,  478,  480,  514,  476,  479,  479,  479,
      479,  479,  479,  481,  480,  480,  480,  480,  480,  480,
       99,  166,  166,  481,  481,  481,  481,  481,  481,  538,

      166,  128,  504,  166,  101,  515,  516,  534,  505,  166,
      166,  443,  504,  504,  504,  504,  504,  504,  505,  505,
      505,  505,  505,  505,  506,  518,  166,  524,  166,   99,
      530,  166,  166,  525,  506,  506,  506,  506,  506,  506,
      523,   99,  166,  101,  101,  527,  528,  240,  563,  535,
      191,  166,  529,  539,  526,  101,  528,  528,  528,  528,
      528,  528,  529,  529,  529,  529,  529,  529,  277,  166,
      166,  542,  166,   99,   99,  166,  537,  166,  277,  277,
      277,  277,  277,  277,  531,  166,  166,  101,  101,  543,
      166,  549,  541,  317,  166,  547,  558,  550,  166,  552,

      166,  544,  320,  317,  317,  317,  317,  317,  317,  553,
      545,   99,  320,  320,  320,  320,  320,  320,  551,  166,
      555,   99,  166,  166,  166,  101,  166,   99,  166,  561,
      166,  443,  166,  562,  166,  101,  166,  166,  166,   99,
      560,  101,  166,  565,  559,  571,  236,  567,  166,  572,
      166,  569,  568,  101,  166,  573,  570,  574,  166,  564,
      443,  578,  556,  166,  166,  166,  575,  166,  166,  166,
      166,  166,  581,  166,  576,  166,  586,  166,  577,  166,
      582,  166,  214,  580,  138,  128,  590,  583,  585,  128,
      193,  589,  579,  587,  166,  588,   45,  161,   45,   45,

       45,   45,   45,   45,   45,   45,   51,   51,   61,   51,
       51,   54,   67,   54,   54,   54,   54,   54,   54,   54,
       54,   59,   63,  138,   59,   59,   96,   96,   96,   96,
       96,   96,   96,   96,  100,  135,  100,  100,  128,  100,
      100,  121,  121,  121,  121,  121,  121,  121,  121,  121,
      121,  125,  125,  125,  125,  125,  125,  125,  125,  127,
      127,  119,  127,  127,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  137,  137,  137,  137,  137,  137,
      137,  137,  137,  137,  137,   69,   69,  139,  139,  139,
      139,  139,  139,  139,  139,  142,  142,  142,  107,  142,

      142,  163,  163,  163,  163,  163,  163,  163,  163,  165,
      165,  106,  165,  165,  178,  178,  178,  178,  178,  178,
      178,  178,  197,  197,  197,  197,  197,  197,  197,  197,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  202,
      202,  205,  205,  205,  205,  205,  205,  205,  205,  217,
      217,  217,  217,  217,  217,  217,  217,  234,  234,  234,
       98,  234,  246,  246,  246,  246,  246,  246,  246,  246,
      246,  246,  246,  272,  272,  272,   82,  272,  277,  277,
      277,   62,  277,  277,  277,  277,  277,  277,  311,  311,
      311,   61,  311,  317,   56,  317,  317,  317,  317,  317,

      317,  317,  317,  320,   53,  320,  320,  320,  320,  320,
      320,  320,  320,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  357,  357,  357,  591,  357,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  405,  405,
      405,  591,  405,    9,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,

      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591
    } ;

static yyconst short int yy_chk[2415] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3,    7,    4,    7,    7,   38,   14,    7,   40,    3,
        8,    4,    8,    8,   17,  590,    8,   11,   11,   11,
       11,   11,    3,    3,    4,    4,   14,  588,   38,   17,
        7,   40,   61,   92,   61,    3,   92,    4,   27,    8,

       12,   12,   12,   12,   12,   13,   13,   13,   13,   13,
       15,   19,   27,   15,   42,   42,   42,   42,   42,   25,
       15,   19,   28,   15,   15,   15,   15,   15,   15,   25,
       25,   25,   25,   25,   25,   33,   28,   54,   48,   45,
       69,   48,   13,   86,  170,   80,   19,   22,   48,   33,
       68,   69,   54,   28,   22,   22,   80,   22,   28,   45,
       86,   68,  170,   68,   22,   33,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   22,   22,   22,
       22,   22,   22,   87,   59,   90,   22,   24,   91,  162,

      585,   93,   90,   87,   93,   91,  162,   24,   59,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   34,   29,   35,   24,
       29,  584,  113,   39,   88,   89,   39,  113,  172,   60,
       34,   29,   35,   39,  172,   43,   43,   43,   43,   43,
       89,   88,   73,   60,   70,   74,   81,   34,   35,   39,
       60,   29,   34,   73,   49,   70,   74,   81,   39,   41,
       41,   95,   41,   41,   49,   49,   49,   49,   49,   49,
       70,   41,   43,   73,   41,   41,   50,  111,   95,  121,

       81,  114,   58,  176,   74,   41,   50,   50,   50,   50,
       50,   50,   58,   58,   58,   58,   58,   58,  120,  121,
      111,  176,   41,  120,  114,   52,  122,   41,   47,   47,
       47,   47,   52,   71,   47,   52,   52,   52,   52,   52,
       52,   72,   75,  120,   71,   77,  122,   47,  579,  577,
      574,   71,   72,   75,   47,  194,   77,   47,   47,   47,
       47,   47,   47,   55,   55,   55,   55,   72,   94,   75,
       76,   77,  138,   67,   55,  194,  138,   77,   72,   94,
      167,   76,   55,   67,   67,   67,   67,   67,   67,   55,
       78,   76,   55,   55,   55,   55,   55,   55,   79,   96,

      100,   78,  167,  570,  551,  168,   78,   84,  168,   79,
      219,  102,   79,   96,  100,  109,   79,   84,   84,   84,
       84,   84,   84,   78,  101,  102,  103,   78,   83,  109,
      178,  105,  219,  131,  101,  101,  101,  101,  101,  101,
      103,  108,   83,   83,  178,  105,   83,  102,  131,   83,
      103,  109,   83,   83,   83,  108,   83,  132,   83,  105,
       83,  108,  139,   83,   97,   97,   97,   97,   97,  142,
      145,  144,  132,  139,  104,  261,   97,  110,  261,  104,
      142,  145,  144,   97,  104,  104,  104,  104,  104,  104,
       97,  110,  169,   97,   97,   97,   97,   97,   97,  112,

      112,  144,  112,  112,  171,  110,  115,  115,  169,  115,
      115,  136,  171,  550,  112,  112,  117,  117,  130,  117,
      117,  115,  115,  116,  116,  136,  116,  116,  130,  136,
      118,  118,  115,  118,  118,  117,  147,  148,  116,  116,
      128,  215,  118,  130,  487,  215,  220,  147,  148,  118,
      128,  128,  128,  128,  128,  128,  118,  123,  123,  123,
      123,  123,  150,  123,  146,  174,  220,  143,  247,  546,
      541,  487,  247,  150,  174,  146,  123,  143,  143,  143,
      143,  143,  143,  123,  146,  149,  123,  123,  123,  123,
      123,  123,  124,  124,  124,  124,  149,  151,  124,  149,

      225,  152,  153,  154,  155,  156,  157,  225,  151,  159,
      540,  124,  152,  153,  154,  155,  156,  157,  124,  173,
      159,  124,  124,  124,  124,  124,  124,  126,  126,  126,
      126,  126,  158,  175,  173,  159,  160,  180,  534,  184,
      152,  181,  175,  158,  182,  181,  126,  160,  221,  158,
      521,  180,  182,  184,  185,  181,  126,  126,  126,  126,
      126,  126,  133,  133,  133,  133,  133,  160,  185,  205,
      221,  226,  166,  133,  341,  186,  346,  341,  226,  346,
      205,  133,  166,  166,  166,  166,  166,  166,  133,  186,
      199,  133,  133,  133,  133,  133,  133,  134,  134,  134,

      134,  187,  208,  210,  234,  199,  389,  177,  134,  520,
      238,  389,  234,  208,  210,  187,  134,  177,  177,  177,
      177,  177,  177,  134,  238,  259,  134,  134,  134,  134,
      134,  134,  140,  140,  140,  140,  140,  188,  188,  192,
      188,  188,  187,  211,  212,  259,  192,  140,  224,  460,
      499,  140,  460,  192,  211,  212,  188,  223,  140,  224,
      201,  140,  140,  140,  140,  140,  140,  164,  164,  164,
      164,  164,  190,  190,  201,  190,  190,  207,  239,  223,
      227,  213,  239,  470,  228,  467,  164,  201,  207,  239,
      227,  190,  213,  164,  228,  207,  164,  164,  164,  164,

      164,  164,  179,  179,  179,  179,  179,  209,  213,  251,
      222,  189,  189,  258,  189,  189,  253,  393,  209,  464,
      251,  179,  393,  258,  209,  257,  189,  222,  195,  253,
      189,  179,  179,  179,  179,  179,  179,  189,  195,  195,
      195,  195,  195,  195,  196,  272,  257,  580,  262,  264,
      256,  245,  278,  272,  196,  196,  196,  196,  196,  196,
      198,  198,  198,  198,  198,  245,  252,  256,  260,  262,
      200,  264,  278,  279,  580,  435,  245,  252,  260,  198,
      200,  200,  200,  200,  200,  200,  204,  458,  279,  198,
      198,  198,  198,  198,  198,  268,  204,  204,  204,  204,

      204,  204,  206,  206,  206,  206,  206,  290,  296,  268,
      458,  533,  216,  295,  533,  287,  296,  250,  290,  268,
      295,  206,  216,  216,  216,  216,  216,  216,  250,  287,
      270,  206,  206,  206,  206,  206,  206,  218,  218,  218,
      218,  218,  291,  250,  270,  301,  311,  229,  421,  294,
      405,  287,  270,  291,  311,  301,  218,  229,  229,  229,
      229,  229,  229,  230,  294,  232,  218,  218,  218,  218,
      218,  218,  269,  230,  230,  230,  230,  230,  230,  232,
      304,  388,  376,  302,  232,  303,  269,  233,  297,  269,
      302,  304,  303,  232,  362,  300,  232,  233,  233,  233,

      233,  233,  233,  237,  237,  237,  237,  237,  241,  237,
      297,  309,  265,  300,  237,  309,  237,  265,  241,  241,
      241,  241,  241,  241,  242,  309,  265,  317,  336,  237,
      243,  340,  265,  320,  242,  242,  242,  242,  242,  242,
      243,  243,  243,  243,  243,  243,  244,  317,  320,  531,
      336,  361,  248,  340,  343,  345,  244,  244,  244,  244,
      244,  244,  248,  248,  248,  248,  248,  248,  249,  349,
      531,  343,  345,  366,  254,  348,  390,  349,  249,  249,
      249,  249,  249,  249,  254,  254,  254,  254,  254,  254,
      255,  348,  365,  366,  397,  413,  266,  365,  390,  371,

      255,  255,  255,  255,  255,  255,  266,  266,  266,  266,
      266,  266,  267,  357,  371,  413,  397,  365,  271,  398,
      516,  357,  267,  267,  267,  267,  267,  267,  271,  271,
      271,  271,  271,  271,  276,  276,  276,  276,  276,  472,
      276,  398,  333,  516,  472,  276,  333,  276,  277,  277,
      277,  277,  277,  283,  277,  308,  333,  307,  298,  277,
      276,  277,  298,  283,  283,  283,  283,  283,  283,  308,
      403,  307,  394,  298,  277,  281,  281,  281,  281,  281,
      298,  281,  307,  339,  403,  284,  281,  281,  281,  394,
      308,  360,  344,  339,  281,  284,  284,  284,  284,  284,

      284,  281,  285,  344,  281,  281,  281,  281,  281,  281,
      286,  403,  285,  285,  285,  285,  285,  285,  288,  461,
      286,  286,  286,  286,  286,  286,  289,  359,  288,  288,
      288,  288,  288,  288,  292,  461,  289,  289,  289,  289,
      289,  289,  293,  462,  292,  292,  292,  292,  292,  292,
      305,  462,  293,  293,  293,  293,  293,  293,  306,  512,
      305,  305,  305,  305,  305,  305,  310,  512,  306,  306,
      306,  306,  306,  306,  392,  433,  310,  310,  310,  310,
      310,  310,  316,  316,  316,  316,  316,  318,  318,  318,
      318,  318,  392,  391,  358,  316,  350,  433,  329,  391,

      318,  319,  319,  319,  319,  350,  396,  319,  329,  329,
      329,  329,  329,  329,  384,  322,  322,  322,  322,  322,
      319,  322,  342,  396,  384,  414,  322,  319,  322,  395,
      319,  319,  319,  319,  319,  319,  321,  321,  321,  321,
      395,  322,  347,  399,  353,  414,  347,  321,  323,  323,
      323,  323,  323,  399,  323,  321,  417,  347,  353,  323,
      547,  323,  321,  547,  347,  321,  321,  321,  321,  321,
      321,  417,  353,  370,  323,  324,  324,  324,  324,  324,
      429,  324,  418,  370,  328,  354,  324,  429,  324,  325,
      325,  325,  325,  325,  330,  325,  355,  418,  370,  354,

      325,  324,  325,  437,  330,  330,  330,  330,  330,  330,
      355,  315,  431,  513,  381,  325,  326,  326,  326,  326,
      326,  354,  326,  431,  513,  437,  331,  326,  381,  326,
      402,  381,  355,  381,  402,  326,  331,  331,  331,  331,
      331,  331,  326,  381,  402,  326,  326,  326,  326,  326,
      326,  327,  327,  327,  327,  327,  314,  327,  441,  430,
      432,  332,  327,  327,  327,  423,  430,  432,  441,  439,
      327,  332,  332,  332,  332,  332,  332,  327,  334,  423,
      327,  327,  327,  327,  327,  327,  335,  439,  334,  334,
      334,  334,  334,  334,  337,  423,  335,  335,  335,  335,

      335,  335,  338,  436,  337,  337,  337,  337,  337,  337,
      436,  424,  338,  338,  338,  338,  338,  338,  351,  351,
      351,  351,  351,  352,  313,  424,  387,  401,  424,  443,
      351,  387,  312,  352,  352,  352,  352,  352,  352,  356,
      387,  401,  434,  443,  351,  299,  387,  401,  434,  356,
      356,  356,  356,  356,  356,  363,  363,  363,  363,  363,
      367,  367,  367,  367,  367,  375,  367,  440,  363,  282,
      275,  274,  558,  367,  440,  375,  375,  375,  375,  375,
      375,  372,  372,  372,  372,  372,  367,  368,  368,  368,
      368,  368,  372,  368,  372,  558,  273,  465,  263,  438,

      378,  378,  378,  378,  378,  438,  368,  372,  385,  385,
      385,  385,  385,  368,  465,  466,  368,  368,  368,  368,
      368,  368,  369,  369,  369,  369,  378,  469,  369,  466,
      486,  246,  377,  469,  385,  486,  422,  422,  422,  422,
      422,  369,  377,  377,  377,  377,  377,  377,  369,  425,
      442,  369,  369,  369,  369,  369,  369,  373,  373,  373,
      373,  373,  422,  425,  463,  473,  425,  379,  373,  240,
      452,  454,  442,  463,  425,  473,  373,  379,  379,  379,
      379,  379,  379,  373,  452,  454,  373,  373,  373,  373,
      373,  373,  374,  374,  374,  374,  445,  455,  452,  456,

      457,  454,  380,  374,  455,  495,  456,  457,  236,  235,
      445,  374,  380,  380,  380,  380,  380,  380,  374,  382,
      495,  374,  374,  374,  374,  374,  374,  383,  445,  382,
      382,  382,  382,  382,  382,  386,  459,  383,  383,  383,
      383,  383,  383,  459,  471,  386,  386,  386,  386,  386,
      386,  400,  400,  400,  400,  400,  404,  428,  428,  428,
      428,  428,  468,  400,  471,  492,  404,  404,  404,  404,
      404,  404,  412,  412,  412,  412,  412,  400,  412,  415,
      488,  451,  475,  428,  468,  412,  488,  492,  497,  415,
      415,  415,  415,  415,  415,  451,  475,  482,  412,  416,

      416,  416,  416,  416,  419,  497,  475,  453,  542,  483,
      416,  482,  416,  484,  419,  419,  419,  419,  419,  419,
      420,  453,  451,  483,  542,  416,  426,  484,  483,  476,
      420,  420,  420,  420,  420,  420,  426,  426,  426,  426,
      426,  426,  427,  476,  494,  444,  485,  453,  427,  496,
      522,  476,  217,  202,  494,  427,  496,  427,  446,  444,
      485,  489,  427,  427,  444,  522,  427,  447,  446,  446,
      446,  446,  446,  446,  448,  489,  444,  447,  447,  447,
      447,  447,  447,  449,  448,  448,  448,  448,  448,  448,
      477,  490,  491,  449,  449,  449,  449,  449,  449,  518,

      514,  197,  479,  493,  477,  490,  491,  514,  480,  518,
      500,  477,  479,  479,  479,  479,  479,  479,  480,  480,
      480,  480,  480,  480,  481,  493,  498,  500,  501,  502,
      508,  519,  555,  501,  481,  481,  481,  481,  481,  481,
      498,  503,  515,  502,  508,  503,  504,  193,  555,  515,
      191,  524,  505,  519,  502,  503,  504,  504,  504,  504,
      504,  504,  505,  505,  505,  505,  505,  505,  506,  517,
      511,  524,  525,  526,  527,  532,  517,  548,  506,  506,
      506,  506,  506,  506,  511,  523,  535,  526,  527,  525,
      536,  535,  523,  528,  538,  532,  548,  536,  537,  538,

      543,  526,  529,  528,  528,  528,  528,  528,  528,  539,
      527,  544,  529,  529,  529,  529,  529,  529,  537,  539,
      543,  545,  549,  552,  553,  544,  554,  556,  557,  553,
      559,  544,  560,  554,  561,  545,  562,  567,  563,  564,
      552,  556,  565,  557,  549,  563,  183,  559,  566,  565,
      568,  561,  560,  564,  569,  566,  562,  567,  571,  556,
      564,  572,  545,  573,  576,  575,  568,  578,  581,  582,
      583,  572,  575,  165,  569,  586,  582,  587,  571,  589,
      576,  163,  161,  573,  137,  127,  589,  578,  581,  125,
      119,  587,  572,  583,   85,  586,  592,   82,  592,  592,

      592,  592,  592,  592,  592,  592,  593,  593,   65,  593,
      593,  594,   64,  594,  594,  594,  594,  594,  594,  594,
      594,  595,   63,   62,  595,  595,  596,  596,  596,  596,
      596,  596,  596,  596,  597,   57,  597,  597,   51,  597,
      597,  598,  598,  598,  598,  598,  598,  598,  598,  598,
      598,  599,  599,  599,  599,  599,  599,  599,  599,  600,
      600,   44,  600,  600,  601,  601,  601,  601,  601,  601,
      601,  601,  601,  601,  602,  602,  602,  602,  602,  602,
      602,  602,  602,  602,  602,  603,  603,  604,  604,  604,
      604,  604,  604,  604,  604,  605,  605,  605,   31,  605,

      605,  606,  606,  606,  606,  606,  606,  606,  606,  607,
      607,   30,  607,  607,  608,  608,  608,  608,  608,  608,
      608,  608,  609,  609,  609,  609,  609,  609,  609,  609,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  611,  611,  611,  611,  611,  611,  611,  611,  612,
      612,  612,  612,  612,  612,  612,  612,  613,  613,  613,
       26,  613,  614,  614,  614,  614,  614,  614,  614,  614,
      614,  614,  614,  615,  615,  615,   23,  615,  616,  616,
      616,   21,  616,  616,  616,  616,  616,  616,  617,  617,
      617,   20,  617,  618,   18,  618,  618,  618,  618,  618,

      618,  618,  618,  619,   16,  619,  619,  619,  619,  619,
      619,  619,  619,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  620,  621,  621,  621,    9,  621,  622,  622,
      622,  622,  622,  622,  622,  622,  622,  622,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  624,  624,
      624,    0,  624,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,

      591,  591,  591,  591,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  591
    } ;

#line 1 "<stdin>"
#define INITIAL 0
#define YY_STACK_USED 1
#define mediaquery 1
YY_DECL
	{
	register yy_state_type yy_current_state;
	register UChar *yy_cp, *yy_bp;
	register int yy_act;
	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 592 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 2354 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;




		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 31 "<stdin>"
{countLines(); /* ignore comments */ }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 33 "<stdin>"
{countLines(); yyTok = WHITESPACE; return yyTok;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 35 "<stdin>"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 36 "<stdin>"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 37 "<stdin>"
{yyTok = INCLUDES; return yyTok;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 38 "<stdin>"
{yyTok = DASHMATCH; return yyTok;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 39 "<stdin>"
{yyTok = BEGINSWITH; return yyTok;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 40 "<stdin>"
{yyTok = ENDSWITH; return yyTok;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 41 "<stdin>"
{yyTok = CONTAINS; return yyTok;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 42 "<stdin>"
{yyTok = MEDIA_NOT; return yyTok;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 43 "<stdin>"
{yyTok = MEDIA_ONLY; return yyTok;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 44 "<stdin>"
{yyTok = MEDIA_AND; return yyTok;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 46 "<stdin>"
{yyTok = STRING; return yyTok;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 47 "<stdin>"
{yyTok = IDENT; return yyTok;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 48 "<stdin>"
{yyTok = NTH; return yyTok;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 49 "<stdin>"
{BEGIN(INITIAL); yyTok = *yytext; return yyTok;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 51 "<stdin>"
{yyTok = HEX; return yyTok;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 52 "<stdin>"
{yyTok = IDSEL; return yyTok;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 54 "<stdin>"
{BEGIN(mediaquery); yyTok = IMPORT_SYM; return yyTok;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 55 "<stdin>"
{yyTok = PAGE_SYM; return yyTok;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 56 "<stdin>"
{yyTok = TOPLEFTCORNER_SYM; return yyTok;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 57 "<stdin>"
{yyTok = TOPLEFT_SYM; return yyTok;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 58 "<stdin>"
{yyTok = TOPCENTER_SYM; return yyTok;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 59 "<stdin>"
{yyTok = TOPRIGHT_SYM; return yyTok;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 60 "<stdin>"
{yyTok = TOPRIGHTCORNER_SYM; return yyTok;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 61 "<stdin>"
{yyTok = BOTTOMLEFTCORNER_SYM; return yyTok;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 62 "<stdin>"
{yyTok = BOTTOMLEFT_SYM; return yyTok;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 63 "<stdin>"
{yyTok = BOTTOMCENTER_SYM; return yyTok;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 64 "<stdin>"
{yyTok = BOTTOMRIGHT_SYM; return yyTok;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 65 "<stdin>"
{yyTok = BOTTOMRIGHTCORNER_SYM; return yyTok;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 66 "<stdin>"
{yyTok = LEFTTOP_SYM; return yyTok;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 67 "<stdin>"
{yyTok = LEFTMIDDLE_SYM; return yyTok;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 68 "<stdin>"
{yyTok = LEFTBOTTOM_SYM; return yyTok;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 69 "<stdin>"
{yyTok = RIGHTTOP_SYM; return yyTok;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 70 "<stdin>"
{yyTok = RIGHTMIDDLE_SYM; return yyTok;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 71 "<stdin>"
{yyTok = RIGHTBOTTOM_SYM; return yyTok;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 72 "<stdin>"
{BEGIN(mediaquery); yyTok = MEDIA_SYM; return yyTok;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 73 "<stdin>"
{yyTok = FONT_FACE_SYM; return yyTok;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 74 "<stdin>"
{yyTok = CHARSET_SYM; return yyTok;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 75 "<stdin>"
{yyTok = NAMESPACE_SYM; return yyTok; }
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 76 "<stdin>"
{yyTok = WEBKIT_RULE_SYM; return yyTok; }
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 77 "<stdin>"
{yyTok = WEBKIT_DECLS_SYM; return yyTok; }
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 78 "<stdin>"
{yyTok = WEBKIT_VALUE_SYM; return yyTok; }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 79 "<stdin>"
{BEGIN(mediaquery); yyTok = WEBKIT_MEDIAQUERY_SYM; return yyTok; }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 80 "<stdin>"
{yyTok = WEBKIT_SELECTOR_SYM; return yyTok; }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 81 "<stdin>"
{yyTok = WEBKIT_KEYFRAMES_SYM; return yyTok; }
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 82 "<stdin>"
{yyTok = WEBKIT_KEYFRAME_RULE_SYM; return yyTok; }
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 84 "<stdin>"
{yyTok = ATKEYWORD; return yyTok; }
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 86 "<stdin>"
{yyTok = IMPORTANT_SYM; return yyTok;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 88 "<stdin>"
{yyTok = EMS; return yyTok;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 89 "<stdin>"
{yyTok = REMS; return yyTok;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 90 "<stdin>"
{yyTok = QEMS; return yyTok;} /* quirky ems */
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 91 "<stdin>"
{yyTok = EXS; return yyTok;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 92 "<stdin>"
{yyTok = PXS; return yyTok;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 93 "<stdin>"
{yyTok = CMS; return yyTok;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 94 "<stdin>"
{yyTok = MMS; return yyTok;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 95 "<stdin>"
{yyTok = INS; return yyTok;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 96 "<stdin>"
{yyTok = PTS; return yyTok;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 97 "<stdin>"
{yyTok = PCS; return yyTok;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 98 "<stdin>"
{yyTok = DEGS; return yyTok;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 99 "<stdin>"
{yyTok = RADS; return yyTok;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 100 "<stdin>"
{yyTok = GRADS; return yyTok;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 101 "<stdin>"
{yyTok = TURNS; return yyTok;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 102 "<stdin>"
{yyTok = MSECS; return yyTok;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 103 "<stdin>"
{yyTok = SECS; return yyTok;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 104 "<stdin>"
{yyTok = HERTZ; return yyTok;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 105 "<stdin>"
{yyTok = KHERTZ; return yyTok;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 106 "<stdin>"
{yyTok = DIMEN; return yyTok;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 107 "<stdin>"
{yyTok = INVALIDDIMEN; return yyTok;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 108 "<stdin>"
{yyTok = PERCENTAGE; return yyTok;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 109 "<stdin>"
{yyTok = INTEGER; return yyTok;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 110 "<stdin>"
{yyTok = FLOATTOKEN; return yyTok;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 112 "<stdin>"
{yyTok = ANYFUNCTION; return yyTok;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 113 "<stdin>"
{yyTok = NOTFUNCTION; return yyTok;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 114 "<stdin>"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 115 "<stdin>"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 116 "<stdin>"
{yyTok = CALCFUNCTION; return yyTok;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 117 "<stdin>"
{yyTok = MINFUNCTION; return yyTok;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 118 "<stdin>"
{yyTok = MAXFUNCTION; return yyTok;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 119 "<stdin>"
{BEGIN(nthchild); yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 120 "<stdin>"
{yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 122 "<stdin>"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 123 "<stdin>"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 84:
#line 126 "<stdin>"
case 85:
YY_RULE_SETUP
#line 126 "<stdin>"
{BEGIN(INITIAL); yyTok = *yytext; return yyTok; }
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 127 "<stdin>"
{yyTok = *yytext; return yyTok;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 129 "<stdin>"
ECHO;
	YY_BREAK
case YY_END_OF_BUFFER:
	yy_c_buf_p = yy_cp - 1;
	yy_cp = yy_c_buf_p;
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(mediaquery):
case YY_STATE_EOF(forkeyword):
case YY_STATE_EOF(nthchild):
	yyterminate();

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */
