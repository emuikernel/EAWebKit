<!--
***********************************************************************************************
Microsoft.Cpp.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

This file defines the properties required to build Visual C++ projects.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <Import Condition=" '$(ForceImportBeforeCppTargets)' != '' and exists('$(ForceImportBeforeCppTargets)')" Project="$(ForceImportBeforeCppTargets)"/>

  <PropertyGroup>
    <SolutionExt>.sln</SolutionExt>
    <Language>C++</Language>
    <DefaultLanguageSourceExtension>.cpp</DefaultLanguageSourceExtension>
  </PropertyGroup>

  <!-- *******************************************************************************************
        Set Build Default Environment Variables
       ******************************************************************************************* -->

  <UsingTask TaskName="SetEnv"      AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>

  <PropertyGroup>
    <_IsNativeEnvironment Condition="'$(PROCESSOR_ARCHITECTURE)' == 'AMD64' and '$(Platform)' == 'X64'">true</_IsNativeEnvironment>
    <_IsNativeEnvironment Condition="'$(PROCESSOR_ARCHITECTURE)' == 'IA64' and '$(Platform)' == 'Itanium'">true</_IsNativeEnvironment>
    <DefaultToolArchitecture Condition="'$(DefaultToolArchitecture)' == '' and '$(_IsNativeEnvironment)' != 'true'">Native32Bit</DefaultToolArchitecture>
    <DefaultToolArchitecture Condition="'$(DefaultToolArchitecture)' == '' and '$(_IsNativeEnvironment)' == 'true'">Native64Bit</DefaultToolArchitecture>
  </PropertyGroup>

  <Target Name="SetBuildDefaultEnvironmentVariables"
          Condition="'$(UseEnv)' != 'true'">
    <SetEnv Condition="'$(_IsNativeEnvironment)' != 'true'"
            Name   ="PATH"
            Value  ="$(ExecutablePath)"
            Prefix ="false">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="Path"/>
    </SetEnv>
    <SetEnv Condition="'$(_IsNativeEnvironment)' == 'true'"
            Name ="PATH"
            Value ="$(NativeExecutablePath)"
            Prefix ="false">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="Path"/>
    </SetEnv>

    <SetEnv Name   ="LIB"
            Value  ="$(LibraryPath)"
            Prefix ="false">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="LIB"/>
    </SetEnv>

    <SetEnv Name   ="LIBPATH"
            Value  ="$(ReferencePath)"
            Prefix ="false">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="LIBPATH"/>
    </SetEnv>

    <SetEnv Name   ="INCLUDE"
            Value  ="$(IncludePath)"
            Prefix ="false" >
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="INCLUDE"/>
    </SetEnv>

  </Target>

  <!-- *******************************************************************************************
        Set User Macro Environment Variables
       ******************************************************************************************* -->
  <Target Name="SetUserMacroEnvironmentVariables" Condition="'@(BuildMacro)' != ''">

    <SetEnv Condition="'%(BuildMacro.EnvironmentVariable)' == 'true'"
            Name   ="@(BuildMacro)"
            Value  ="%(BuildMacro.Value)"
            Prefix ="false">
      <Output TaskParameter="OutputEnvironmentVariable" PropertyName="%(BuildMacro.Identity)"/>
    </SetEnv>

  </Target>

  <Import Condition="'$(ConfigurationType)' == 'Makefile'" Project="$(VCTargetsPath)\Microsoft.MakeFile.Targets"/>
  <Import Condition="'$(ConfigurationType)' != 'Makefile' and Exists('$(VCTargetsPath)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).Targets')" Project="$(VCTargetsPath)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).Targets"/>
  <Import Condition="'$(ConfigurationType)' != 'Makefile' and !Exists('$(VCTargetsPath)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).Targets')" Project="$(VCTargetsPath)\Microsoft.Cpp.InvalidPlatform.Targets"/>

  <!-- *******************************************************************************************
        Cleaning targets
       ******************************************************************************************* -->
  <Import Project="$(VCTargetsPath)\Microsoft.CppClean.targets" />

  <Import Condition=" '$(ForceImportAfterCppTargets)' != '' and exists('$(ForceImportAfterCppTargets)')" Project="$(ForceImportAfterCppTargets)"/>
  
</Project>
